# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  schedule:
    - cron: "0 * * * *"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: write
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

      - name: Check latest CoreDNS Version
        run: |
          # Tag-Version des latest-release holen
          VERSION=$(curl -s https://api.github.com/repos/coredns/coredns/releases/latest | jq -r '.tag_name')
          echo $VERSION
          
          if [[ "$VERSION" != "$(cat latest.txt)" ]]
          then
                  # download der latest Asstes
                  ASSETS=$(curl -s https://api.github.com/repos/coredns/coredns/releases/latest | jq -r '.assets[] | select(.name | contains("linux_amd64")) | .browser_download_url')
                  for row in $ASSETS; do
                          echo download ${row} 
                          filename="${row##*/}"
                          extension="${row##*.}"
                          filewoext="${filename%.*}"
                          wget -q --show-progress ${row}
                          
                          if [[ "$extension" == "sha256" ]]
                          then
                                  echo "sha256 vergleich fÃ¼r $filewoext"
                                  sha_file=$(sha256sum $filewoext)
                                  sha_soll=$(cat $filename)
                                  
                                  if [[ "$sha_file" == "$sha_soll" ]]
                                  then
                                          echo "Download erfolgreich!"
                                          echo $VERSION > latest.txt
                                          rm $filename
                                  else
                                          echo "Download kaputt :-("
                                  fi
                          fi
                  done
          else
                  echo "Die Version $VERSION ist aktuell."
          fi

          # debug workspace
          ls -la
          
      - name: GIT commit and push chges
        env: 
          CI_COMMIT_MESSAGE: Ci Update for CoreDNS
          CI_COMMIT_AUTHOR: Continuous Integration
        run: |
          git config --global user.name "${{ env.CI_COMMIT_AUTHOR }}"
          git config --global user.email "actionbot@noreply.github.com"
          git add *
          git commit -m "${{ env.CI_COMMIT_MESSAGE }}"
          git push






          
